# Use Docker file from https://hub.docker.com/r/runmymind/docker-android-sdk

steps:
  # Build debug version of the SDK, from the develop branch and the features branches
  - label: "Assemble Debug version"
    agents:
      # We use a medium sized instance instead of the normal small ones because
      # gradle build is long
      queue: "medium"
    command: "./gradlew clean lintRelease test assembleDebug assembleAndroidTest --stacktrace"

    # we're not building on an ephemeral instance, so let's not publish binary artifacts
    # artifact_paths: "matrix-sdk/build/outputs/aar/*.aar"
    
    branches: "develop feature/*"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"
          mount-buildkite-agent: false


  # Build release version of the SDK, from the master branch
  - label: "Assemble Release version"
    command: "./gradlew clean assembleRelease"

    # we're not building on an ephemeral instance, so let's not publish binary artifacts
    artifact_paths: "matrix-sdk/build/outputs/aar/*.aar"

    branches: "master"
    plugins:
      - docker#v3.1.0:
          image: "runmymind/docker-android-sdk"
          mount-buildkite-agent: false

  - label: "Code quality"
    command: "./tools/check/check_code_quality.sh"
    plugins:
      - docker#v3.1.0:
          image: "debian:buster-slim"
          mount-buildkite-agent: false
      
  - wait

  # Trigger Riot-Android project, when develop branch build successfully
  - label: "üê¥ Trigger riot-android"
    trigger: "riot-android"
    branches: "develop"
    build:
        branch: "develop"
        message: "[matrix-android-sdk] ${BUILDKITE_MESSAGE}"
    async: true